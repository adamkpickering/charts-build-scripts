package auto

import (
	"github.com/blang/semver"
)

type versions struct {
	latest              *version
	latestRepoPrefix    *version
	toRelease           *version
	toReleaseRepoPrefix *version
}

type version struct {
	txt string
	svr *semver.Version
}

// calculateNextVersion will calculate the next version to bump based on the latest version
// if the chart had a patch bump, it will increment the patch version for the repoPrefixVersion
// if the chart had a minor or major bump, it will increment the minor version for the repoPrefixVersion
// the major repoPrefixVersion is only bumped when Rancher version is bumped.
func (b *Bump) calculateNextVersion() error {
	// TODO: load versions and parse the repository prefix versions from them
	//

	// TODO: check and parse the versions before building the new version
	//

	// build: toRelease full version
	targetVersion := b.versions.toReleaseRepoPrefix.txt + "+up" + b.versions.toRelease.txt
	targetSemver := semver.MustParse(targetVersion)
	b.releaseYaml.ChartVersion = targetVersion
	b.Pkg.AutoGeneratedBumpVersion = &targetSemver

	return nil
}
